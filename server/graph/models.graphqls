enum DistanceUnit { Kilometre Mile }
type DistanceValue {
	value: Int
	type: DistanceUnit
}

enum FluidUnit { Litre Gallon }
type FluidValue {
	value: Int
	type: FluidUnit
}

enum MoneyUnit { CAD USD }
type MoneyValue {
	value: Int
	type: MoneyUnit
}

interface Log {
	id: String!
	date: Int!
	vehicle: Vehicle!
	notes: String!
}

type MaintenanceLog implements Log {
	id: String!
	date: Int!
	vehicle: Vehicle!
	notes: String!
}

type FuelLog implements Log {
	id: String!
	date: Int!
	vehicle: Vehicle!
	notes: String!
	trip: DistanceValue
	grade: Int
	fuelAmount: FluidValue
	fuelPrice: MoneyValue
}

type OilChangeLog implements Log {
	id: String!
	date: Int!
	vehicle: Vehicle!
	notes: String!
}

type User {
	id: String!
	email: String!
	logs(startDate: Int!, endDate: Int!): [Log!]
	vehicles: [Vehicle!]
	preference: UserPreference
}

type UserPreference {
	distance: DistanceUnit
	fluid: FluidUnit
	money: MoneyUnit
	vehicle: Vehicle
}

type Vehicle {
	id: String!
	make: String!
	model: String!
	user: User!
	odometer: DistanceValue!
}
